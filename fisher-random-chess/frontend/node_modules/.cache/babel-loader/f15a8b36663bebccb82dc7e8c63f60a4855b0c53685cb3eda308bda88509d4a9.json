{"ast":null,"code":"var _jsxFileName = \"C:\\\\Develop\\\\Facultate\\\\AN_III\\\\SEM_II\\\\AI\\\\Proiect AI\\\\fisher-random-chess\\\\frontend\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Chessboard from \"chessboardjsx\";\nimport axios from \"axios\";\nimport MoveHistory from \"./MoveHistory\";\nimport Score from \"./Score\";\nimport \"../styles/Board.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const [fen, setFen] = useState(\"start\");\n  const [highlightedSquares, setHighlightedSquares] = useState({});\n  const [moves, setMoves] = useState([]);\n  const [capturedByWhite, setCapturedByWhite] = useState([]);\n  const [capturedByBlack, setCapturedByBlack] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:5000/api/setup\").then(response => {\n      setFen(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching setup:\", error);\n    });\n  }, []);\n  const onDrop = ({\n    sourceSquare,\n    targetSquare\n  }) => {\n    axios.post(\"http://127.0.0.1:5000/api/move\", {\n      from: sourceSquare,\n      to: targetSquare,\n      fen: fen\n    }).then(response => {\n      if (response.data.status === \"success\") {\n        setFen(response.data.fen);\n        setMoves(prevMoves => [...prevMoves, `${sourceSquare}-${targetSquare}`]);\n        if (response.data.captured) {\n          if (response.data.turn === \"w\") {\n            setCapturedByBlack(prev => [...prev, response.data.captured]);\n          } else {\n            setCapturedByWhite(prev => [...prev, response.data.captured]);\n          }\n        }\n\n        // Afișează mutarea botului\n        if (response.data.ai_move) {\n          setMoves(prevMoves => [...prevMoves, `Bot: ${response.data.ai_move}`]);\n        }\n      } else {\n        alert(response.data.message || \"Invalid move.\");\n      }\n    }).catch(error => {\n      console.error(\"Error making move:\", error);\n      alert(\"Invalid move or server error.\");\n    });\n  };\n  const resetGame = () => {\n    axios.get(\"http://127.0.0.1:5000/api/setup\").then(response => {\n      setFen(response.data);\n      setMoves([]);\n      setCapturedByWhite([]);\n      setCapturedByBlack([]);\n    }).catch(error => {\n      console.error(\"Error resetting game:\", error);\n    });\n  };\n  const getPieceImage = piece => {\n    return `/assets/chess-pieces/${piece}.png`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fisher Random Chess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chessboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"captured-pieces\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Captured by White:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pieces\",\n          children: capturedByWhite.map((piece, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: getPieceImage(piece),\n            alt: piece\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n        position: fen,\n        onDrop: onDrop,\n        squareStyles: highlightedSquares,\n        draggable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"captured-pieces\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Captured by Black:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pieces\",\n          children: capturedByBlack.map((piece, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: getPieceImage(piece),\n            alt: piece\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MoveHistory, {\n      moves: moves\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Score, {\n      captured: [...capturedByWhite, ...capturedByBlack]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"254fkfWKuhGmx3vd5ucvjKwrDC0=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","Chessboard","axios","MoveHistory","Score","jsxDEV","_jsxDEV","Board","_s","fen","setFen","highlightedSquares","setHighlightedSquares","moves","setMoves","capturedByWhite","setCapturedByWhite","capturedByBlack","setCapturedByBlack","get","then","response","data","catch","error","console","onDrop","sourceSquare","targetSquare","post","from","to","status","prevMoves","captured","turn","prev","ai_move","alert","message","resetGame","getPieceImage","piece","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","map","index","src","alt","position","squareStyles","draggable","_c","$RefreshReg$"],"sources":["C:/Develop/Facultate/AN_III/SEM_II/AI/Proiect AI/fisher-random-chess/frontend/src/components/Board.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Chessboard from \"chessboardjsx\";\nimport axios from \"axios\";\nimport MoveHistory from \"./MoveHistory\";\nimport Score from \"./Score\";\nimport \"../styles/Board.scss\";\n\nconst Board = () => {\n  const [fen, setFen] = useState(\"start\");\n  const [highlightedSquares, setHighlightedSquares] = useState({});\n  const [moves, setMoves] = useState([]);\n  const [capturedByWhite, setCapturedByWhite] = useState([]);\n  const [capturedByBlack, setCapturedByBlack] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://127.0.0.1:5000/api/setup\")\n      .then((response) => {\n        setFen(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching setup:\", error);\n      });\n  }, []);\n\n  const onDrop = ({ sourceSquare, targetSquare }) => {\n    axios\n      .post(\"http://127.0.0.1:5000/api/move\", {\n        from: sourceSquare,\n        to: targetSquare,\n        fen: fen,\n      })\n      .then((response) => {\n        if (response.data.status === \"success\") {\n          setFen(response.data.fen);\n          setMoves((prevMoves) => [\n            ...prevMoves,\n            `${sourceSquare}-${targetSquare}`,\n          ]);\n\n          if (response.data.captured) {\n            if (response.data.turn === \"w\") {\n              setCapturedByBlack((prev) => [...prev, response.data.captured]);\n            } else {\n              setCapturedByWhite((prev) => [...prev, response.data.captured]);\n            }\n          }\n\n          // Afișează mutarea botului\n          if (response.data.ai_move) {\n            setMoves((prevMoves) => [\n              ...prevMoves,\n              `Bot: ${response.data.ai_move}`,\n            ]);\n          }\n        } else {\n          alert(response.data.message || \"Invalid move.\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error making move:\", error);\n        alert(\"Invalid move or server error.\");\n      });\n  };\n\n  const resetGame = () => {\n    axios\n      .get(\"http://127.0.0.1:5000/api/setup\")\n      .then((response) => {\n        setFen(response.data);\n        setMoves([]);\n        setCapturedByWhite([]);\n        setCapturedByBlack([]);\n      })\n      .catch((error) => {\n        console.error(\"Error resetting game:\", error);\n      });\n  };\n\n  const getPieceImage = (piece) => {\n    return `/assets/chess-pieces/${piece}.png`;\n  };\n\n  return (\n    <div>\n      <h2>Fisher Random Chess</h2>\n      <button onClick={resetGame}>Reset Game</button>\n      <div className=\"chessboard-container\">\n        <div className=\"captured-pieces\">\n          <h3>Captured by White:</h3>\n          <div className=\"pieces\">\n            {capturedByWhite.map((piece, index) => (\n              <img key={index} src={getPieceImage(piece)} alt={piece} />\n            ))}\n          </div>\n        </div>\n\n        <Chessboard\n          position={fen}\n          onDrop={onDrop}\n          squareStyles={highlightedSquares}\n          draggable={true}\n        />\n\n        <div className=\"captured-pieces\">\n          <h3>Captured by Black:</h3>\n          <div className=\"pieces\">\n            {capturedByBlack.map((piece, index) => (\n              <img key={index} src={getPieceImage(piece)} alt={piece} />\n            ))}\n          </div>\n        </div>\n      </div>\n      <MoveHistory moves={moves} />\n      <Score captured={[...capturedByWhite, ...capturedByBlack]} />\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Develop\\\\Facultate\\\\AN_III\\\\SEM_II\\\\AI\\\\Proiect AI\\\\fisher-random-chess\\\\frontend\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Chessboard from \"chessboardjsx\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const [fen, setFen] = useState(\"start\");\n  useEffect(() => {\n    // Fetch the initial random setup\n    axios.get(\"http://127.0.0.1:5000/api/setup\").then(response => {\n      console.log(\"FEN from backend:\", response.data); // Debugging output\n      setFen(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching setup:\", error); // Debugging output\n    });\n  }, []);\n  const onDrop = ({\n    sourceSquare,\n    targetSquare\n  }) => {\n    axios.post(\"http://127.0.0.1:5000/api/move\", {\n      from: sourceSquare,\n      to: targetSquare,\n      fen\n    }).then(response => {\n      if (response.data.status === \"success\") {\n        console.log(\"Move successful:\", response.data); // Debugging output\n        setFen(response.data.fen);\n      } else {\n        alert(response.data.message);\n      }\n    }).catch(error => {\n      console.error(\"Error making move:\", error); // Debugging output\n      alert(\"Invalid move!\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fisher Random Chess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n      position: fen,\n      onDrop: onDrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"7pFMXfAO0hzEK50QoUtBlI2e3mc=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","Chessboard","axios","jsxDEV","_jsxDEV","Board","_s","fen","setFen","get","then","response","console","log","data","catch","error","onDrop","sourceSquare","targetSquare","post","from","to","status","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","position","_c","$RefreshReg$"],"sources":["C:/Develop/Facultate/AN_III/SEM_II/AI/Proiect AI/fisher-random-chess/frontend/src/components/Board.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Chessboard from \"chessboardjsx\";\nimport axios from \"axios\";\n\nconst Board = () => {\n  const [fen, setFen] = useState(\"start\");\n\n  useEffect(() => {\n    // Fetch the initial random setup\n    axios\n      .get(\"http://127.0.0.1:5000/api/setup\")\n      .then((response) => {\n        console.log(\"FEN from backend:\", response.data); // Debugging output\n        setFen(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching setup:\", error); // Debugging output\n      });\n  }, []);\n\n  const onDrop = ({ sourceSquare, targetSquare }) => {\n    axios\n      .post(\"http://127.0.0.1:5000/api/move\", {\n        from: sourceSquare,\n        to: targetSquare,\n        fen,\n      })\n      .then((response) => {\n        if (response.data.status === \"success\") {\n          console.log(\"Move successful:\", response.data); // Debugging output\n          setFen(response.data.fen);\n        } else {\n          alert(response.data.message);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error making move:\", error); // Debugging output\n        alert(\"Invalid move!\");\n      });\n  };\n\n  return (\n    <div>\n      <h1>Fisher Random Chess</h1>\n      <Chessboard position={fen} onDrop={onDrop} />\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAEvCC,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CACFO,GAAG,CAAC,iCAAiC,CAAC,CACtCC,IAAI,CAAEC,QAAQ,IAAK;MAClBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;MACjDN,MAAM,CAACG,QAAQ,CAACG,IAAI,CAAC;IACvB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,MAAM,GAAGA,CAAC;IAAEC,YAAY;IAAEC;EAAa,CAAC,KAAK;IACjDjB,KAAK,CACFkB,IAAI,CAAC,gCAAgC,EAAE;MACtCC,IAAI,EAAEH,YAAY;MAClBI,EAAE,EAAEH,YAAY;MAChBZ;IACF,CAAC,CAAC,CACDG,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACG,IAAI,CAACS,MAAM,KAAK,SAAS,EAAE;QACtCX,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;QAChDN,MAAM,CAACG,QAAQ,CAACG,IAAI,CAACP,GAAG,CAAC;MAC3B,CAAC,MAAM;QACLiB,KAAK,CAACb,QAAQ,CAACG,IAAI,CAACW,OAAO,CAAC;MAC9B;IACF,CAAC,CAAC,CACDV,KAAK,CAAEC,KAAK,IAAK;MAChBJ,OAAO,CAACI,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC,CAAC,CAAC;MAC5CQ,KAAK,CAAC,eAAe,CAAC;IACxB,CAAC,CAAC;EACN,CAAC;EAED,oBACEpB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B1B,OAAA,CAACH,UAAU;MAAC8B,QAAQ,EAAExB,GAAI;MAACU,MAAM,EAAEA;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAACxB,EAAA,CA3CID,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AA6CX,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}
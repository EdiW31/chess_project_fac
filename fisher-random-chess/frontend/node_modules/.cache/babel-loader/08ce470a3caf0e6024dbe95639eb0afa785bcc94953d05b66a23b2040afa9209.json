{"ast":null,"code":"var _jsxFileName = \"C:\\\\Develop\\\\Facultate\\\\AN_III\\\\SEM_II\\\\AI\\\\proiect AI\\\\chess_project_fac\\\\fisher-random-chess\\\\frontend\\\\src\\\\components\\\\Chessboard3D.js\";\nimport React from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SQUARE_SIZE = 1;\nfunction Square({\n  position,\n  color\n}) {\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: position,\n    receiveShadow: true,\n    castShadow: true,\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [SQUARE_SIZE, 0.1, SQUARE_SIZE]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Chessboard() {\n  const squares = [];\n  for (let x = 0; x < 8; x++) {\n    for (let z = 0; z < 8; z++) {\n      const isWhite = (x + z) % 2 === 1;\n      squares.push(/*#__PURE__*/_jsxDEV(Square, {\n        position: [x - 3.5, 0, z - 3.5],\n        color: isWhite ? \"#f0d9b5\" : \"#b58863\"\n      }, `${x}-${z}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: squares\n  }, void 0, false);\n}\n_c2 = Chessboard;\nexport default function Chessboard3D() {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    shadows: true,\n    camera: {\n      position: [0, 8, 10],\n      fov: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      position: [10, 10, 5],\n      intensity: 0.8,\n      castShadow: true,\n      \"shadow-mapSize-width\": 1024,\n      \"shadow-mapSize-height\": 1024\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chessboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Chessboard3D;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Chessboard\");\n$RefreshReg$(_c3, \"Chessboard3D\");","map":{"version":3,"names":["React","Canvas","OrbitControls","jsxDEV","_jsxDEV","Fragment","_Fragment","SQUARE_SIZE","Square","position","color","receiveShadow","castShadow","children","args","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chessboard","squares","x","z","isWhite","push","_c2","Chessboard3D","shadows","camera","fov","intensity","_c3","$RefreshReg$"],"sources":["C:/Develop/Facultate/AN_III/SEM_II/AI/proiect AI/chess_project_fac/fisher-random-chess/frontend/src/components/Chessboard3D.js"],"sourcesContent":["import React from \"react\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { OrbitControls } from \"@react-three/drei\";\r\n\r\nconst SQUARE_SIZE = 1;\r\n\r\nfunction Square({ position, color }) {\r\n  return (\r\n    <mesh position={position} receiveShadow castShadow>\r\n      <boxGeometry args={[SQUARE_SIZE, 0.1, SQUARE_SIZE]} />\r\n      <meshStandardMaterial color={color} />\r\n    </mesh>\r\n  );\r\n}\r\n\r\nfunction Chessboard() {\r\n  const squares = [];\r\n  for (let x = 0; x < 8; x++) {\r\n    for (let z = 0; z < 8; z++) {\r\n      const isWhite = (x + z) % 2 === 1;\r\n      squares.push(\r\n        <Square\r\n          key={`${x}-${z}`}\r\n          position={[x - 3.5, 0, z - 3.5]}\r\n          color={isWhite ? \"#f0d9b5\" : \"#b58863\"}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  return <>{squares}</>;\r\n}\r\n\r\nexport default function Chessboard3D() {\r\n  return (\r\n    <Canvas shadows camera={{ position: [0, 8, 10], fov: 50 }}>\r\n      <ambientLight intensity={0.5} />\r\n      <directionalLight\r\n        position={[10, 10, 5]}\r\n        intensity={0.8}\r\n        castShadow\r\n        shadow-mapSize-width={1024}\r\n        shadow-mapSize-height={1024}\r\n      />\r\n      <Chessboard />\r\n      <OrbitControls />\r\n    </Canvas>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Develop\\\\Facultate\\\\AN_III\\\\SEM_II\\\\AI\\\\Proiect AI\\\\fisher-random-chess\\\\frontend\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Chessboard from \"chessboardjsx\";\nimport axios from \"axios\";\nimport MoveHistory from \"./MoveHistory\";\nimport Score from \"./Score\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const [fen, setFen] = useState(\"start\");\n  const [highlightedSquares, setHighlightedSquares] = useState({});\n  const [moves, setMoves] = useState([]);\n  const [capturedByWhite, setCapturedByWhite] = useState([]); // Piesele capturate de alb\n  const [capturedByBlack, setCapturedByBlack] = useState([]); // Piesele capturate de negru\n\n  useEffect(() => {\n    // Fetch the initial random setup\n    axios.get(\"http://127.0.0.1:5000/api/setup\").then(response => {\n      setFen(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching setup:\", error);\n    });\n  }, []);\n  const onDrop = ({\n    sourceSquare,\n    targetSquare\n  }) => {\n    axios.post(\"http://127.0.0.1:5000/api/move\", {\n      from: sourceSquare,\n      to: targetSquare,\n      fen: fen\n    }).then(response => {\n      if (response.data.status === \"success\") {\n        setFen(response.data.fen); // Update the board with the new FEN\n        setMoves(prevMoves => [...prevMoves, `${sourceSquare}-${targetSquare}`]); // Update move history\n\n        if (response.data.captured) {\n          // Verificăm cine a capturat piesa\n          if (response.data.turn === \"w\") {\n            // Dacă este rândul albului, negrul a capturat\n            setCapturedByBlack(prev => [...prev, response.data.captured]);\n          } else {\n            // Dacă este rândul negrului, albul a capturat\n            setCapturedByWhite(prev => [...prev, response.data.captured]);\n          }\n        }\n      } else {\n        setHighlightedSquares({\n          [targetSquare]: {\n            backgroundColor: \"rgba(255, 0, 0, 0.4)\"\n          } // Red for invalid move\n        });\n        setTimeout(() => setHighlightedSquares({}), 1000); // Clear after 1 second\n        alert(response.data.message || \"Invalid move.\");\n      }\n    }).catch(error => {\n      console.error(\"Error making move:\", error);\n      alert(\"Invalid move or server error.\");\n    });\n  };\n  const onMouseOverSquare = square => {\n    axios.post(\"http://127.0.0.1:5000/api/legal_moves\", {\n      fen,\n      square\n    }).then(response => {\n      const legalMoves = response.data.moves;\n      const highlights = {};\n      legalMoves.forEach(move => {\n        highlights[move] = {\n          backgroundColor: \"rgba(0, 255, 0, 0.4)\"\n        }; // Green for valid moves\n      });\n      setHighlightedSquares(highlights);\n    }).catch(error => {\n      console.error(\"Error fetching legal moves:\", error);\n    });\n  };\n  const onMouseOutSquare = () => {\n    setHighlightedSquares({});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fisher Random Chess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Captured by White:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: \"5px\"\n          },\n          children: capturedByWhite.map((piece, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: piece\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n        position: fen,\n        onDrop: onDrop,\n        onMouseOverSquare: onMouseOverSquare,\n        onMouseOutSquare: onMouseOutSquare,\n        squareStyles: highlightedSquares,\n        draggable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Captured by Black:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: \"5px\"\n          },\n          children: capturedByBlack.map((piece, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: piece\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MoveHistory, {\n      moves: moves\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Score, {\n      captured: [...capturedByWhite, ...capturedByBlack]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"254fkfWKuhGmx3vd5ucvjKwrDC0=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","Chessboard","axios","MoveHistory","Score","jsxDEV","_jsxDEV","Board","_s","fen","setFen","highlightedSquares","setHighlightedSquares","moves","setMoves","capturedByWhite","setCapturedByWhite","capturedByBlack","setCapturedByBlack","get","then","response","data","catch","error","console","onDrop","sourceSquare","targetSquare","post","from","to","status","prevMoves","captured","turn","prev","backgroundColor","setTimeout","alert","message","onMouseOverSquare","square","legalMoves","highlights","forEach","move","onMouseOutSquare","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","gap","map","piece","index","position","squareStyles","draggable","_c","$RefreshReg$"],"sources":["C:/Develop/Facultate/AN_III/SEM_II/AI/Proiect AI/fisher-random-chess/frontend/src/components/Board.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Chessboard from \"chessboardjsx\";\nimport axios from \"axios\";\nimport MoveHistory from \"./MoveHistory\";\nimport Score from \"./Score\";\n\nconst Board = () => {\n  const [fen, setFen] = useState(\"start\");\n  const [highlightedSquares, setHighlightedSquares] = useState({});\n  const [moves, setMoves] = useState([]);\n  const [capturedByWhite, setCapturedByWhite] = useState([]); // Piesele capturate de alb\n  const [capturedByBlack, setCapturedByBlack] = useState([]); // Piesele capturate de negru\n\n  useEffect(() => {\n    // Fetch the initial random setup\n    axios\n      .get(\"http://127.0.0.1:5000/api/setup\")\n      .then((response) => {\n        setFen(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching setup:\", error);\n      });\n  }, []);\n\n  const onDrop = ({ sourceSquare, targetSquare }) => {\n    axios\n      .post(\"http://127.0.0.1:5000/api/move\", {\n        from: sourceSquare,\n        to: targetSquare,\n        fen: fen,\n      })\n      .then((response) => {\n        if (response.data.status === \"success\") {\n          setFen(response.data.fen); // Update the board with the new FEN\n          setMoves((prevMoves) => [\n            ...prevMoves,\n            `${sourceSquare}-${targetSquare}`,\n          ]); // Update move history\n\n          if (response.data.captured) {\n            // Verificăm cine a capturat piesa\n            if (response.data.turn === \"w\") {\n              // Dacă este rândul albului, negrul a capturat\n              setCapturedByBlack((prev) => [...prev, response.data.captured]);\n            } else {\n              // Dacă este rândul negrului, albul a capturat\n              setCapturedByWhite((prev) => [...prev, response.data.captured]);\n            }\n          }\n        } else {\n          setHighlightedSquares({\n            [targetSquare]: { backgroundColor: \"rgba(255, 0, 0, 0.4)\" }, // Red for invalid move\n          });\n          setTimeout(() => setHighlightedSquares({}), 1000); // Clear after 1 second\n          alert(response.data.message || \"Invalid move.\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error making move:\", error);\n        alert(\"Invalid move or server error.\");\n      });\n  };\n\n  const onMouseOverSquare = (square) => {\n    axios\n      .post(\"http://127.0.0.1:5000/api/legal_moves\", { fen, square })\n      .then((response) => {\n        const legalMoves = response.data.moves;\n        const highlights = {};\n        legalMoves.forEach((move) => {\n          highlights[move] = { backgroundColor: \"rgba(0, 255, 0, 0.4)\" }; // Green for valid moves\n        });\n        setHighlightedSquares(highlights);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching legal moves:\", error);\n      });\n  };\n\n  const onMouseOutSquare = () => {\n    setHighlightedSquares({});\n  };\n\n  return (\n    <div>\n      <h2>Fisher Random Chess</h2>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        {/* Piesele capturate de alb */}\n        <div>\n          <h3>Captured by White:</h3>\n          <div style={{ display: \"flex\", gap: \"5px\" }}>\n            {capturedByWhite.map((piece, index) => (\n              <span key={index}>{piece}</span>\n            ))}\n          </div>\n        </div>\n\n        {/* Tabla de șah */}\n        <Chessboard\n          position={fen}\n          onDrop={onDrop}\n          onMouseOverSquare={onMouseOverSquare}\n          onMouseOutSquare={onMouseOutSquare}\n          squareStyles={highlightedSquares}\n          draggable={true}\n        />\n\n        {/* Piesele capturate de negru */}\n        <div>\n          <h3>Captured by Black:</h3>\n          <div style={{ display: \"flex\", gap: \"5px\" }}>\n            {capturedByBlack.map((piece, index) => (\n              <span key={index}>{piece}</span>\n            ))}\n          </div>\n        </div>\n      </div>\n      <MoveHistory moves={moves} />\n      <Score captured={[...capturedByWhite, ...capturedByBlack]} />\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
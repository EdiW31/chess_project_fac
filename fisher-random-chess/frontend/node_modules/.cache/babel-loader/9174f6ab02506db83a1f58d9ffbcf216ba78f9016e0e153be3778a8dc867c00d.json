{"ast":null,"code":"var _jsxFileName = \"C:\\\\Develop\\\\Facultate\\\\AN_III\\\\SEM_II\\\\AI\\\\proiect AI\\\\chess_project_fac\\\\fisher-random-chess\\\\frontend\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Chessboard from \"chessboardjsx\";\nimport axios from \"axios\";\nimport { Chess } from \"chess.js\";\nimport Score from \"./Score.js\";\nimport GameModeSelection from \"./GameModeSelection\";\nimport \"../styles/Board.scss\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://127.0.0.1:5000\"); // Adresa backend-ului\n\nconst Board = () => {\n  _s();\n  const [gameMode, setGameMode] = useState(null); // \"ai\" sau \"friend\"\n  const [gameId, setGameId] = useState(null);\n\n  // State declarations\n  const [gameState, setGameState] = useState({\n    fen: \"start\",\n    moves: [],\n    scoreWhite: 0,\n    scoreBlack: 0,\n    isCheck: false,\n    isCheckmate: false,\n    turn: \"w\"\n  });\n  const [capturedPieces, setCapturedPieces] = useState({\n    white: [],\n    black: []\n  });\n  const [highlightedSquares, setHighlightedSquares] = useState({});\n  const [learningData, setLearningData] = useState(null);\n\n  // Effects\n  useEffect(() => {\n    initializeGame();\n  }, []);\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:5000/api/learning_data\").then(response => {\n      console.log(\"Learning Data fetched:\", response.data); // Debugging\n      setLearningData(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching learning data:\", error);\n    });\n  }, []);\n  useEffect(() => {\n    // Evenimente WebSocket\n    socket.on(\"game_created\", data => {\n      setGameId(data.game_id);\n      setGameState({\n        fen: data.fen,\n        turn: \"w\"\n      });\n    });\n    socket.on(\"game_joined\", data => {\n      setGameId(data.game_id);\n      setGameState({\n        fen: data.fen,\n        turn: \"w\"\n      });\n    });\n    return () => {\n      socket.off(); // Dezactivează evenimentele la demontarea componentei\n    };\n  }, []);\n  useEffect(() => {\n    socket.on(\"move_made\", data => {\n      setGameState(prev => ({\n        ...prev,\n        fen: data.fen,\n        turn: data.turn\n      }));\n    });\n    socket.on(\"game_over\", data => {\n      alert(`Game over! Winner: ${data.winner}`);\n      setGameState(prev => ({\n        ...prev,\n        fen: data.fen,\n        turn: null\n      }));\n    });\n    return () => {\n      socket.off(\"move_made\");\n      socket.off(\"game_over\");\n    };\n  }, []);\n  useEffect(() => {\n    const syncGameState = async () => {\n      if (!gameId) return;\n      try {\n        const response = await axios.get(`http://127.0.0.1:5000/api/game_state/${gameId}`);\n        if (response.data.status === \"success\") {\n          setGameState(prev => ({\n            ...prev,\n            fen: response.data.fen,\n            turn: response.data.turn,\n            moves: response.data.moves\n          }));\n        }\n      } catch (error) {\n        console.error(\"Error syncing game state:\", error);\n      }\n    };\n    const interval = setInterval(syncGameState, 2000); // Sincronizare la fiecare 2 secunde\n    return () => clearInterval(interval); // Curăță intervalul la demontarea componentei\n  }, [gameId]);\n  useEffect(() => {\n    socket.on(\"sync_game\", data => {\n      if (data.game_id === gameId) {\n        // Sincronizează starea jocului\n        axios.get(`http://127.0.0.1:5000/api/game_state/${gameId}`).then(response => {\n          if (response.data.status === \"success\") {\n            setGameState(prev => ({\n              ...prev,\n              fen: response.data.fen,\n              turn: response.data.turn,\n              moves: response.data.moves\n            }));\n          }\n        }).catch(error => console.error(\"Error syncing game state:\", error));\n      }\n    });\n    return () => {\n      socket.off(\"sync_game\");\n    };\n  }, [gameId]);\n\n  // API calls\n  const initializeGame = async () => {\n    try {\n      const [setupResponse, learningResponse] = await Promise.all([axios.get(\"http://127.0.0.1:5000/api/setup\"), axios.get(\"http://127.0.0.1:5000/api/learning_data\")]);\n      setGameState(prev => ({\n        ...prev,\n        fen: setupResponse.data\n      }));\n      setLearningData(learningResponse.data);\n    } catch (error) {\n      console.error(\"Error initializing game:\", error);\n    }\n  };\n  const fetchValidMoves = async square => {\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/api/legal_moves\", {\n        fen: gameState.fen,\n        square\n      });\n      const newHighlightedSquares = response.data.moves.reduce((acc, move) => ({\n        ...acc,\n        [move]: {\n          background: \"rgba(255, 255, 0, 0.4)\",\n          borderRadius: \"50%\"\n        }\n      }), {});\n      setHighlightedSquares(newHighlightedSquares);\n    } catch (error) {\n      console.error(\"Error fetching valid moves:\", error);\n    }\n  };\n  const startMultiplayerGame = () => {\n    socket.emit(\"create_game\");\n  };\n  const joinMultiplayerGame = () => {\n    if (!gameId) {\n      alert(\"Please enter a valid Game ID.\");\n      return;\n    }\n    socket.emit(\"join_game\", {\n      game_id: gameId\n    });\n  };\n\n  // Event handlers\n  const onDrop = ({\n    sourceSquare,\n    targetSquare\n  }) => {\n    const isPawnPromotion = checkPawnPromotion(sourceSquare, targetSquare);\n    const promotion = isPawnPromotion ? \"q\" : null;\n    const move = `${sourceSquare}${targetSquare}`;\n    socket.emit(\"make_move\", {\n      game_id: gameId,\n      move,\n      promotion\n    });\n  };\n  const onMouseOverSquare = square => {\n    try {\n      const chess = new Chess(gameState.fen);\n      if (chess.get(square)) {\n        fetchValidMoves(square);\n      }\n    } catch (error) {\n      console.error(\"Error checking piece:\", error);\n    }\n  };\n  const onMouseOutSquare = () => setHighlightedSquares({});\n  const resetGame = () => {\n    axios.get(\"http://127.0.0.1:5000/api/start_game\").then(response => {\n      setGameState({\n        fen: response.data.fen,\n        moves: [],\n        scoreWhite: 0,\n        scoreBlack: 0,\n        isCheck: false,\n        isCheckmate: false\n      });\n      setCapturedPieces({\n        white: [],\n        black: []\n      });\n    }).catch(error => console.error(\"Error resetting game:\", error));\n  };\n\n  // Helper functions\n  const checkPawnPromotion = (sourceSquare, targetSquare) => {\n    const isWhitePawn = gameState.fen.split(\" \")[1] === \"w\" && sourceSquare[1] === \"7\" && targetSquare[1] === \"8\";\n    const isBlackPawn = gameState.fen.split(\" \")[1] === \"b\" && sourceSquare[1] === \"2\" && targetSquare[1] === \"1\";\n    return isWhitePawn || isBlackPawn;\n  };\n  const makeMove = (sourceSquare, targetSquare) => {\n    const move = `${sourceSquare}${targetSquare}`;\n    socket.emit(\"make_move\", {\n      game_id,\n      move\n    });\n  };\n  const handleMoveResponse = response => {\n    if (response.data.status === \"success\") {\n      updateGameState(response.data);\n    } else if (response.data.status === \"game_over\") {\n      alert(response.data.message);\n\n      // Reîncarcă Learning Data\n      axios.get(\"http://127.0.0.1:5000/api/learning_data\").then(res => {\n        console.log(\"Learning Data fetched:\", res.data); // Debugging\n        setLearningData(res.data); // Actualizează Learning Data\n      }).catch(error => {\n        console.error(\"Error fetching learning data:\", error);\n      });\n      resetGame(); // Resetează jocul\n    } else {\n      alert(response.data.message || \"Invalid move.\");\n    }\n  };\n  const handleMoveError = error => {\n    console.error(\"Error making move:\", error);\n    alert(\"Invalid move or server error.\");\n  };\n  const updateGameState = data => {\n    setGameState(prev => ({\n      ...prev,\n      fen: data.fen,\n      moves: [...prev.moves, data.lastMove],\n      scoreWhite: data.score_white || prev.scoreWhite,\n      scoreBlack: data.score_black || prev.scoreBlack,\n      isCheck: data.is_check || false,\n      isCheckmate: data.is_checkmate || false\n    }));\n    setCapturedPieces({\n      white: data.captured_by_white || [],\n      black: data.captured_by_black || []\n    });\n  };\n\n  // Render\n  if (!gameMode) {\n    return /*#__PURE__*/_jsxDEV(GameModeSelection, {\n      onSelectMode: setGameMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 12\n    }, this);\n  }\n  if (gameMode === \"friend\") {\n    if (!gameId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Multiplayer Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Game ID\",\n          value: gameId || \"\",\n          onChange: e => setGameId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: joinMultiplayerGame,\n          children: \"Join Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startMultiplayerGame,\n          children: \"Start New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Multiplayer Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Game ID: \", gameId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"turn-indicator\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Turn: \", gameState.turn === \"w\" ? \"White\" : \"Black\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n        position: gameState.fen,\n        onDrop: onDrop,\n        onMouseOverSquare: onMouseOverSquare,\n        onMouseOutSquare: onMouseOutSquare,\n        squareStyles: highlightedSquares,\n        draggable: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chess-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game with AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Reset Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(Score, {\n          scoreBlack: gameState.scoreBlack,\n          scoreWhite: gameState.scoreWhite,\n          isCheck: gameState.isCheck,\n          isCheckmate: gameState.isCheckmate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), learningData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"learning-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Learning Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Games Played:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this), \" \", learningData.games_played]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Piece Values:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(learningData.piece_values).map(([piece, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [piece, \": \", value.toFixed(2)]\n            }, piece, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chessboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n          position: gameState.fen,\n          onDrop: onDrop,\n          onMouseOverSquare: onMouseOverSquare,\n          onMouseOutSquare: onMouseOutSquare,\n          squareStyles: highlightedSquares,\n          draggable: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"turn-indicator\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Turn: \", gameState.turn === \"w\" ? \"White\" : \"Black\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"captured-pieces\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Captured by Player:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pieces\",\n            children: capturedPieces.black.map((piece, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/assets/chess-pieces/${piece}.png`,\n              alt: piece\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"captured-pieces\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Captured by Bot:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pieces\",\n            children: capturedPieces.white.map((piece, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/assets/chess-pieces/${piece}.png`,\n              alt: piece\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"WypDTy1cttsqERIJfCyEGXlxFZ0=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","Chessboard","axios","Chess","Score","GameModeSelection","io","jsxDEV","_jsxDEV","socket","Board","_s","gameMode","setGameMode","gameId","setGameId","gameState","setGameState","fen","moves","scoreWhite","scoreBlack","isCheck","isCheckmate","turn","capturedPieces","setCapturedPieces","white","black","highlightedSquares","setHighlightedSquares","learningData","setLearningData","initializeGame","get","then","response","console","log","data","catch","error","on","game_id","off","prev","alert","winner","syncGameState","status","interval","setInterval","clearInterval","setupResponse","learningResponse","Promise","all","fetchValidMoves","square","post","newHighlightedSquares","reduce","acc","move","background","borderRadius","startMultiplayerGame","emit","joinMultiplayerGame","onDrop","sourceSquare","targetSquare","isPawnPromotion","checkPawnPromotion","promotion","onMouseOverSquare","chess","onMouseOutSquare","resetGame","isWhitePawn","split","isBlackPawn","makeMove","handleMoveResponse","updateGameState","message","res","handleMoveError","lastMove","score_white","score_black","is_check","is_checkmate","captured_by_white","captured_by_black","onSelectMode","fileName","_jsxFileName","lineNumber","columnNumber","children","type","placeholder","value","onChange","e","target","onClick","className","position","squareStyles","draggable","games_played","Object","entries","piece_values","map","piece","toFixed","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Develop/Facultate/AN_III/SEM_II/AI/proiect AI/chess_project_fac/fisher-random-chess/frontend/src/components/Board.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Chessboard from \"chessboardjsx\";\r\nimport axios from \"axios\";\r\nimport { Chess } from \"chess.js\";\r\nimport Score from \"./Score.js\";\r\nimport GameModeSelection from \"./GameModeSelection\";\r\nimport \"../styles/Board.scss\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst socket = io(\"http://127.0.0.1:5000\"); // Adresa backend-ului\r\n\r\nconst Board = () => {\r\n  const [gameMode, setGameMode] = useState(null); // \"ai\" sau \"friend\"\r\n  const [gameId, setGameId] = useState(null);\r\n\r\n  // State declarations\r\n  const [gameState, setGameState] = useState({\r\n    fen: \"start\",\r\n    moves: [],\r\n    scoreWhite: 0,\r\n    scoreBlack: 0,\r\n    isCheck: false,\r\n    isCheckmate: false,\r\n    turn: \"w\",\r\n  });\r\n\r\n  const [capturedPieces, setCapturedPieces] = useState({\r\n    white: [],\r\n    black: [],\r\n  });\r\n\r\n  const [highlightedSquares, setHighlightedSquares] = useState({});\r\n  const [learningData, setLearningData] = useState(null);\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    initializeGame();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://127.0.0.1:5000/api/learning_data\")\r\n      .then((response) => {\r\n        console.log(\"Learning Data fetched:\", response.data); // Debugging\r\n        setLearningData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching learning data:\", error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Evenimente WebSocket\r\n    socket.on(\"game_created\", (data) => {\r\n      setGameId(data.game_id);\r\n      setGameState({ fen: data.fen, turn: \"w\" });\r\n    });\r\n\r\n    socket.on(\"game_joined\", (data) => {\r\n      setGameId(data.game_id);\r\n      setGameState({ fen: data.fen, turn: \"w\" });\r\n    });\r\n\r\n    return () => {\r\n      socket.off(); // Dezactivează evenimentele la demontarea componentei\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"move_made\", (data) => {\r\n      setGameState((prev) => ({\r\n        ...prev,\r\n        fen: data.fen,\r\n        turn: data.turn,\r\n      }));\r\n    });\r\n\r\n    socket.on(\"game_over\", (data) => {\r\n      alert(`Game over! Winner: ${data.winner}`);\r\n      setGameState((prev) => ({\r\n        ...prev,\r\n        fen: data.fen,\r\n        turn: null,\r\n      }));\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"move_made\");\r\n      socket.off(\"game_over\");\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const syncGameState = async () => {\r\n      if (!gameId) return;\r\n\r\n      try {\r\n        const response = await axios.get(\r\n          `http://127.0.0.1:5000/api/game_state/${gameId}`\r\n        );\r\n        if (response.data.status === \"success\") {\r\n          setGameState((prev) => ({\r\n            ...prev,\r\n            fen: response.data.fen,\r\n            turn: response.data.turn,\r\n            moves: response.data.moves,\r\n          }));\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error syncing game state:\", error);\r\n      }\r\n    };\r\n\r\n    const interval = setInterval(syncGameState, 2000); // Sincronizare la fiecare 2 secunde\r\n    return () => clearInterval(interval); // Curăță intervalul la demontarea componentei\r\n  }, [gameId]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"sync_game\", (data) => {\r\n      if (data.game_id === gameId) {\r\n        // Sincronizează starea jocului\r\n        axios.get(`http://127.0.0.1:5000/api/game_state/${gameId}`)\r\n          .then((response) => {\r\n            if (response.data.status === \"success\") {\r\n              setGameState((prev) => ({\r\n                ...prev,\r\n                fen: response.data.fen,\r\n                turn: response.data.turn,\r\n                moves: response.data.moves,\r\n              }));\r\n            }\r\n          })\r\n          .catch((error) => console.error(\"Error syncing game state:\", error));\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"sync_game\");\r\n    };\r\n  }, [gameId]);\r\n\r\n  // API calls\r\n  const initializeGame = async () => {\r\n    try {\r\n      const [setupResponse, learningResponse] = await Promise.all([\r\n        axios.get(\"http://127.0.0.1:5000/api/setup\"),\r\n        axios.get(\"http://127.0.0.1:5000/api/learning_data\"),\r\n      ]);\r\n\r\n      setGameState((prev) => ({ ...prev, fen: setupResponse.data }));\r\n      setLearningData(learningResponse.data);\r\n    } catch (error) {\r\n      console.error(\"Error initializing game:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchValidMoves = async (square) => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://127.0.0.1:5000/api/legal_moves\",\r\n        {\r\n          fen: gameState.fen,\r\n          square,\r\n        }\r\n      );\r\n\r\n      const newHighlightedSquares = response.data.moves.reduce(\r\n        (acc, move) => ({\r\n          ...acc,\r\n          [move]: {\r\n            background: \"rgba(255, 255, 0, 0.4)\",\r\n            borderRadius: \"50%\",\r\n          },\r\n        }),\r\n        {}\r\n      );\r\n\r\n      setHighlightedSquares(newHighlightedSquares);\r\n    } catch (error) {\r\n      console.error(\"Error fetching valid moves:\", error);\r\n    }\r\n  };\r\n\r\n  const startMultiplayerGame = () => {\r\n    socket.emit(\"create_game\");\r\n  };\r\n\r\n  const joinMultiplayerGame = () => {\r\n    if (!gameId) {\r\n      alert(\"Please enter a valid Game ID.\");\r\n      return;\r\n    }\r\n\r\n    socket.emit(\"join_game\", { game_id: gameId });\r\n  };\r\n\r\n  // Event handlers\r\n  const onDrop = ({ sourceSquare, targetSquare }) => {\r\n    const isPawnPromotion = checkPawnPromotion(sourceSquare, targetSquare);\r\n    const promotion = isPawnPromotion ? \"q\" : null;\r\n\r\n    const move = `${sourceSquare}${targetSquare}`;\r\n    socket.emit(\"make_move\", { game_id: gameId, move, promotion });\r\n  };\r\n\r\n  const onMouseOverSquare = (square) => {\r\n    try {\r\n      const chess = new Chess(gameState.fen);\r\n      if (chess.get(square)) {\r\n        fetchValidMoves(square);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error checking piece:\", error);\r\n    }\r\n  };\r\n\r\n  const onMouseOutSquare = () => setHighlightedSquares({});\r\n\r\n  const resetGame = () => {\r\n    axios\r\n      .get(\"http://127.0.0.1:5000/api/start_game\")\r\n      .then((response) => {\r\n        setGameState({\r\n          fen: response.data.fen,\r\n          moves: [],\r\n          scoreWhite: 0,\r\n          scoreBlack: 0,\r\n          isCheck: false,\r\n          isCheckmate: false,\r\n        });\r\n        setCapturedPieces({ white: [], black: [] });\r\n      })\r\n      .catch((error) => console.error(\"Error resetting game:\", error));\r\n  };\r\n\r\n  // Helper functions\r\n  const checkPawnPromotion = (sourceSquare, targetSquare) => {\r\n    const isWhitePawn =\r\n      gameState.fen.split(\" \")[1] === \"w\" &&\r\n      sourceSquare[1] === \"7\" &&\r\n      targetSquare[1] === \"8\";\r\n    const isBlackPawn =\r\n      gameState.fen.split(\" \")[1] === \"b\" &&\r\n      sourceSquare[1] === \"2\" &&\r\n      targetSquare[1] === \"1\";\r\n    return isWhitePawn || isBlackPawn;\r\n  };\r\n\r\n  const makeMove = (sourceSquare, targetSquare) => {\r\n    const move = `${sourceSquare}${targetSquare}`;\r\n    socket.emit(\"make_move\", { game_id, move });\r\n  };\r\n\r\n  const handleMoveResponse = (response) => {\r\n    if (response.data.status === \"success\") {\r\n      updateGameState(response.data);\r\n    } else if (response.data.status === \"game_over\") {\r\n      alert(response.data.message);\r\n\r\n      // Reîncarcă Learning Data\r\n      axios\r\n        .get(\"http://127.0.0.1:5000/api/learning_data\")\r\n        .then((res) => {\r\n          console.log(\"Learning Data fetched:\", res.data); // Debugging\r\n          setLearningData(res.data); // Actualizează Learning Data\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching learning data:\", error);\r\n        });\r\n\r\n      resetGame(); // Resetează jocul\r\n    } else {\r\n      alert(response.data.message || \"Invalid move.\");\r\n    }\r\n  };\r\n\r\n  const handleMoveError = (error) => {\r\n    console.error(\"Error making move:\", error);\r\n    alert(\"Invalid move or server error.\");\r\n  };\r\n\r\n  const updateGameState = (data) => {\r\n    setGameState((prev) => ({\r\n      ...prev,\r\n      fen: data.fen,\r\n      moves: [...prev.moves, data.lastMove],\r\n      scoreWhite: data.score_white || prev.scoreWhite,\r\n      scoreBlack: data.score_black || prev.scoreBlack,\r\n      isCheck: data.is_check || false,\r\n      isCheckmate: data.is_checkmate || false,\r\n    }));\r\n\r\n    setCapturedPieces({\r\n      white: data.captured_by_white || [],\r\n      black: data.captured_by_black || [],\r\n    });\r\n  };\r\n\r\n  // Render\r\n  if (!gameMode) {\r\n    return <GameModeSelection onSelectMode={setGameMode} />;\r\n  }\r\n\r\n  if (gameMode === \"friend\") {\r\n    if (!gameId) {\r\n      return (\r\n        <div>\r\n          <h2>Multiplayer Game</h2>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Game ID\"\r\n            value={gameId || \"\"}\r\n            onChange={(e) => setGameId(e.target.value)}\r\n          />\r\n          <button onClick={joinMultiplayerGame}>Join Game</button>\r\n          <button onClick={startMultiplayerGame}>Start New Game</button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h2>Multiplayer Game</h2>\r\n        <p>Game ID: {gameId}</p>\r\n        <div className=\"turn-indicator\">\r\n          <h3>Turn: {gameState.turn === \"w\" ? \"White\" : \"Black\"}</h3>\r\n        </div>\r\n        <Chessboard\r\n          position={gameState.fen}\r\n          onDrop={onDrop}\r\n          onMouseOverSquare={onMouseOverSquare}\r\n          onMouseOutSquare={onMouseOutSquare}\r\n          squareStyles={highlightedSquares}\r\n          draggable={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"chess-game\">\r\n      <header>\r\n        <h2>Game with AI</h2>\r\n        <button onClick={resetGame}>Reset Game</button>\r\n      </header>\r\n\r\n      <div className=\"game-container\">\r\n        <div className=\"left-panel\">\r\n          <Score\r\n            scoreBlack={gameState.scoreBlack}\r\n            scoreWhite={gameState.scoreWhite}\r\n            isCheck={gameState.isCheck}\r\n            isCheckmate={gameState.isCheckmate}\r\n          />\r\n\r\n          {learningData && (\r\n            <div className=\"learning-data\">\r\n              <h3>Learning Data</h3>\r\n              <p>\r\n                <strong>Games Played:</strong> {learningData.games_played}\r\n              </p>\r\n              <h4>Piece Values:</h4>\r\n              <ul>\r\n                {Object.entries(learningData.piece_values).map(\r\n                  ([piece, value]) => (\r\n                    <li key={piece}>\r\n                      {piece}: {value.toFixed(2)}\r\n                    </li>\r\n                  )\r\n                )}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"chessboard-container\">\r\n          <Chessboard\r\n            position={gameState.fen}\r\n            onDrop={onDrop}\r\n            onMouseOverSquare={onMouseOverSquare}\r\n            onMouseOutSquare={onMouseOutSquare}\r\n            squareStyles={highlightedSquares}\r\n            draggable={true}\r\n          />\r\n          <div className=\"turn-indicator\">\r\n            <h3>Turn: {gameState.turn === \"w\" ? \"White\" : \"Black\"}</h3>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"right-panel\">\r\n          <div className=\"captured-pieces\">\r\n            <h3>Captured by Player:</h3>\r\n            <div className=\"pieces\">\r\n              {capturedPieces.black.map((piece, index) => (\r\n                <img\r\n                  key={index}\r\n                  src={`/assets/chess-pieces/${piece}.png`}\r\n                  alt={piece}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"captured-pieces\">\r\n            <h3>Captured by Bot:</h3>\r\n            <div className=\"pieces\">\r\n              {capturedPieces.white.map((piece, index) => (\r\n                <img\r\n                  key={index}\r\n                  src={`/assets/chess-pieces/${piece}.png`}\r\n                  alt={piece}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
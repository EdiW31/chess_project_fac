{"ast":null,"code":"var _jsxFileName = \"C:\\\\Develop\\\\Facultate\\\\AN_III\\\\SEM_II\\\\AI\\\\proiect AI\\\\chess_project_fac\\\\fisher-random-chess\\\\frontend\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Chessboard from \"chessboardjsx\";\nimport axios from \"axios\";\nimport { Chess } from \"chess.js\";\nimport Score from \"./Score.js\";\nimport GameModeSelection from \"./GameModeSelection\";\nimport \"../styles/Board.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const [gameMode, setGameMode] = useState(null); // \"ai\" sau \"friend\"\n  const [gameId, setGameId] = useState(null);\n\n  // State declarations\n  const [gameState, setGameState] = useState({\n    fen: \"start\",\n    moves: [],\n    scoreWhite: 0,\n    scoreBlack: 0,\n    isCheck: false,\n    isCheckmate: false\n  });\n  const [capturedPieces, setCapturedPieces] = useState({\n    white: [],\n    black: []\n  });\n  const [highlightedSquares, setHighlightedSquares] = useState({});\n  const [learningData, setLearningData] = useState(null);\n\n  // Effects\n  useEffect(() => {\n    initializeGame();\n  }, []);\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:5000/api/learning_data\").then(response => {\n      console.log(\"Learning Data fetched:\", response.data); // Debugging\n      setLearningData(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching learning data:\", error);\n    });\n  }, []);\n\n  // API calls\n  const initializeGame = async () => {\n    try {\n      const [setupResponse, learningResponse] = await Promise.all([axios.get(\"http://127.0.0.1:5000/api/setup\"), axios.get(\"http://127.0.0.1:5000/api/learning_data\")]);\n      setGameState(prev => ({\n        ...prev,\n        fen: setupResponse.data\n      }));\n      setLearningData(learningResponse.data);\n    } catch (error) {\n      console.error(\"Error initializing game:\", error);\n    }\n  };\n  const fetchValidMoves = async square => {\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/api/legal_moves\", {\n        fen: gameState.fen,\n        square\n      });\n      const newHighlightedSquares = response.data.moves.reduce((acc, move) => ({\n        ...acc,\n        [move]: {\n          background: \"rgba(255, 255, 0, 0.4)\",\n          borderRadius: \"50%\"\n        }\n      }), {});\n      setHighlightedSquares(newHighlightedSquares);\n    } catch (error) {\n      console.error(\"Error fetching valid moves:\", error);\n    }\n  };\n  const startMultiplayerGame = () => {\n    axios.post(\"http://127.0.0.1:5000/api/start_multiplayer_game\").then(res => {\n      setGameId(res.data.game_id);\n      setGameState({\n        fen: res.data.fen,\n        moves: []\n      });\n    });\n  };\n\n  // Event handlers\n  const onDrop = ({\n    sourceSquare,\n    targetSquare\n  }) => {\n    const isPawnPromotion = checkPawnPromotion(sourceSquare, targetSquare);\n    const promotion = isPawnPromotion ? \"q\" : null;\n    axios.post(\"http://127.0.0.1:5000/api/move\", {\n      from: sourceSquare,\n      to: targetSquare,\n      fen: gameState.fen,\n      promotion\n    }).then(handleMoveResponse).catch(handleMoveError);\n  };\n  const onMouseOverSquare = square => {\n    try {\n      const chess = new Chess(gameState.fen);\n      if (chess.get(square)) {\n        fetchValidMoves(square);\n      }\n    } catch (error) {\n      console.error(\"Error checking piece:\", error);\n    }\n  };\n  const onMouseOutSquare = () => setHighlightedSquares({});\n  const resetGame = () => {\n    axios.get(\"http://127.0.0.1:5000/api/start_game\").then(response => {\n      setGameState({\n        fen: response.data.fen,\n        moves: [],\n        scoreWhite: 0,\n        scoreBlack: 0,\n        isCheck: false,\n        isCheckmate: false\n      });\n      setCapturedPieces({\n        white: [],\n        black: []\n      });\n    }).catch(error => console.error(\"Error resetting game:\", error));\n  };\n\n  // Helper functions\n  const checkPawnPromotion = (sourceSquare, targetSquare) => {\n    const isWhitePawn = gameState.fen.split(\" \")[1] === \"w\" && sourceSquare[1] === \"7\" && targetSquare[1] === \"8\";\n    const isBlackPawn = gameState.fen.split(\" \")[1] === \"b\" && sourceSquare[1] === \"2\" && targetSquare[1] === \"1\";\n    return isWhitePawn || isBlackPawn;\n  };\n  const handleMoveResponse = response => {\n    if (response.data.status === \"success\") {\n      updateGameState(response.data);\n    } else if (response.data.status === \"game_over\") {\n      alert(response.data.message);\n\n      // Reîncarcă Learning Data\n      axios.get(\"http://127.0.0.1:5000/api/learning_data\").then(res => {\n        console.log(\"Learning Data fetched:\", res.data); // Debugging\n        setLearningData(res.data); // Actualizează Learning Data\n      }).catch(error => {\n        console.error(\"Error fetching learning data:\", error);\n      });\n      resetGame(); // Resetează jocul\n    } else {\n      alert(response.data.message || \"Invalid move.\");\n    }\n  };\n  const handleMoveError = error => {\n    console.error(\"Error making move:\", error);\n    alert(\"Invalid move or server error.\");\n  };\n  const updateGameState = data => {\n    setGameState(prev => ({\n      ...prev,\n      fen: data.fen,\n      moves: [...prev.moves, data.lastMove],\n      scoreWhite: data.score_white || prev.scoreWhite,\n      scoreBlack: data.score_black || prev.scoreBlack,\n      isCheck: data.is_check || false,\n      isCheckmate: data.is_checkmate || false\n    }));\n    setCapturedPieces({\n      white: data.captured_by_white || [],\n      black: data.captured_by_black || []\n    });\n  };\n\n  // Render\n  if (!gameMode) {\n    return /*#__PURE__*/_jsxDEV(GameModeSelection, {\n      onSelectMode: setGameMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 12\n    }, this);\n  }\n  if (gameMode === \"friend\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Multiplayer Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Game ID: \", gameId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chess-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game with AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Reset Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(Score, {\n          scoreBlack: gameState.scoreBlack,\n          scoreWhite: gameState.scoreWhite,\n          isCheck: gameState.isCheck,\n          isCheckmate: gameState.isCheckmate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), learningData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"learning-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Learning Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Games Played:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), \" \", learningData.games_played]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Piece Values:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(learningData.piece_values).map(([piece, value]) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [piece, \": \", value.toFixed(2)]\n            }, piece, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chessboard-container\",\n        children: /*#__PURE__*/_jsxDEV(Chessboard, {\n          position: gameState.fen,\n          onDrop: onDrop,\n          onMouseOverSquare: onMouseOverSquare,\n          onMouseOutSquare: onMouseOutSquare,\n          squareStyles: highlightedSquares,\n          draggable: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"captured-pieces\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Captured by Player:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pieces\",\n            children: capturedPieces.black.map((piece, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/assets/chess-pieces/${piece}.png`,\n              alt: piece\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"captured-pieces\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Captured by Bot:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pieces\",\n            children: capturedPieces.white.map((piece, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/assets/chess-pieces/${piece}.png`,\n              alt: piece\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"4okUL4KNGq16O8hGUJnoKo5GSAM=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","Chessboard","axios","Chess","Score","GameModeSelection","jsxDEV","_jsxDEV","Board","_s","gameMode","setGameMode","gameId","setGameId","gameState","setGameState","fen","moves","scoreWhite","scoreBlack","isCheck","isCheckmate","capturedPieces","setCapturedPieces","white","black","highlightedSquares","setHighlightedSquares","learningData","setLearningData","initializeGame","get","then","response","console","log","data","catch","error","setupResponse","learningResponse","Promise","all","prev","fetchValidMoves","square","post","newHighlightedSquares","reduce","acc","move","background","borderRadius","startMultiplayerGame","res","game_id","onDrop","sourceSquare","targetSquare","isPawnPromotion","checkPawnPromotion","promotion","from","to","handleMoveResponse","handleMoveError","onMouseOverSquare","chess","onMouseOutSquare","resetGame","isWhitePawn","split","isBlackPawn","status","updateGameState","alert","message","lastMove","score_white","score_black","is_check","is_checkmate","captured_by_white","captured_by_black","onSelectMode","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","games_played","Object","entries","piece_values","map","piece","value","toFixed","position","squareStyles","draggable","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Develop/Facultate/AN_III/SEM_II/AI/proiect AI/chess_project_fac/fisher-random-chess/frontend/src/components/Board.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Chessboard from \"chessboardjsx\";\r\nimport axios from \"axios\";\r\nimport { Chess } from \"chess.js\";\r\nimport Score from \"./Score.js\";\r\nimport GameModeSelection from \"./GameModeSelection\";\r\nimport \"../styles/Board.scss\";\r\n\r\nconst Board = () => {\r\n  const [gameMode, setGameMode] = useState(null); // \"ai\" sau \"friend\"\r\n  const [gameId, setGameId] = useState(null);\r\n\r\n  // State declarations\r\n  const [gameState, setGameState] = useState({\r\n    fen: \"start\",\r\n    moves: [],\r\n    scoreWhite: 0,\r\n    scoreBlack: 0,\r\n    isCheck: false,\r\n    isCheckmate: false,\r\n  });\r\n\r\n  const [capturedPieces, setCapturedPieces] = useState({\r\n    white: [],\r\n    black: [],\r\n  });\r\n\r\n  const [highlightedSquares, setHighlightedSquares] = useState({});\r\n  const [learningData, setLearningData] = useState(null);\r\n\r\n  // Effects\r\n  useEffect(() => {\r\n    initializeGame();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://127.0.0.1:5000/api/learning_data\")\r\n      .then((response) => {\r\n        console.log(\"Learning Data fetched:\", response.data); // Debugging\r\n        setLearningData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching learning data:\", error);\r\n      });\r\n  }, []);\r\n\r\n  // API calls\r\n  const initializeGame = async () => {\r\n    try {\r\n      const [setupResponse, learningResponse] = await Promise.all([\r\n        axios.get(\"http://127.0.0.1:5000/api/setup\"),\r\n        axios.get(\"http://127.0.0.1:5000/api/learning_data\"),\r\n      ]);\r\n\r\n      setGameState((prev) => ({ ...prev, fen: setupResponse.data }));\r\n      setLearningData(learningResponse.data);\r\n    } catch (error) {\r\n      console.error(\"Error initializing game:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchValidMoves = async (square) => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://127.0.0.1:5000/api/legal_moves\",\r\n        {\r\n          fen: gameState.fen,\r\n          square,\r\n        }\r\n      );\r\n\r\n      const newHighlightedSquares = response.data.moves.reduce(\r\n        (acc, move) => ({\r\n          ...acc,\r\n          [move]: {\r\n            background: \"rgba(255, 255, 0, 0.4)\",\r\n            borderRadius: \"50%\",\r\n          },\r\n        }),\r\n        {}\r\n      );\r\n\r\n      setHighlightedSquares(newHighlightedSquares);\r\n    } catch (error) {\r\n      console.error(\"Error fetching valid moves:\", error);\r\n    }\r\n  };\r\n\r\n  const startMultiplayerGame = () => {\r\n    axios\r\n      .post(\"http://127.0.0.1:5000/api/start_multiplayer_game\")\r\n      .then((res) => {\r\n        setGameId(res.data.game_id);\r\n        setGameState({ fen: res.data.fen, moves: [] });\r\n      });\r\n  };\r\n\r\n  // Event handlers\r\n  const onDrop = ({ sourceSquare, targetSquare }) => {\r\n    const isPawnPromotion = checkPawnPromotion(sourceSquare, targetSquare);\r\n    const promotion = isPawnPromotion ? \"q\" : null;\r\n\r\n    axios\r\n      .post(\"http://127.0.0.1:5000/api/move\", {\r\n        from: sourceSquare,\r\n        to: targetSquare,\r\n        fen: gameState.fen,\r\n        promotion,\r\n      })\r\n      .then(handleMoveResponse)\r\n      .catch(handleMoveError);\r\n  };\r\n\r\n  const onMouseOverSquare = (square) => {\r\n    try {\r\n      const chess = new Chess(gameState.fen);\r\n      if (chess.get(square)) {\r\n        fetchValidMoves(square);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error checking piece:\", error);\r\n    }\r\n  };\r\n\r\n  const onMouseOutSquare = () => setHighlightedSquares({});\r\n\r\n  const resetGame = () => {\r\n    axios\r\n      .get(\"http://127.0.0.1:5000/api/start_game\")\r\n      .then((response) => {\r\n        setGameState({\r\n          fen: response.data.fen,\r\n          moves: [],\r\n          scoreWhite: 0,\r\n          scoreBlack: 0,\r\n          isCheck: false,\r\n          isCheckmate: false,\r\n        });\r\n        setCapturedPieces({ white: [], black: [] });\r\n      })\r\n      .catch((error) => console.error(\"Error resetting game:\", error));\r\n  };\r\n\r\n  // Helper functions\r\n  const checkPawnPromotion = (sourceSquare, targetSquare) => {\r\n    const isWhitePawn =\r\n      gameState.fen.split(\" \")[1] === \"w\" &&\r\n      sourceSquare[1] === \"7\" &&\r\n      targetSquare[1] === \"8\";\r\n    const isBlackPawn =\r\n      gameState.fen.split(\" \")[1] === \"b\" &&\r\n      sourceSquare[1] === \"2\" &&\r\n      targetSquare[1] === \"1\";\r\n    return isWhitePawn || isBlackPawn;\r\n  };\r\n\r\n  const handleMoveResponse = (response) => {\r\n    if (response.data.status === \"success\") {\r\n      updateGameState(response.data);\r\n    } else if (response.data.status === \"game_over\") {\r\n      alert(response.data.message);\r\n\r\n      // Reîncarcă Learning Data\r\n      axios\r\n        .get(\"http://127.0.0.1:5000/api/learning_data\")\r\n        .then((res) => {\r\n          console.log(\"Learning Data fetched:\", res.data); // Debugging\r\n          setLearningData(res.data); // Actualizează Learning Data\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching learning data:\", error);\r\n        });\r\n\r\n      resetGame(); // Resetează jocul\r\n    } else {\r\n      alert(response.data.message || \"Invalid move.\");\r\n    }\r\n  };\r\n\r\n  const handleMoveError = (error) => {\r\n    console.error(\"Error making move:\", error);\r\n    alert(\"Invalid move or server error.\");\r\n  };\r\n\r\n  const updateGameState = (data) => {\r\n    setGameState((prev) => ({\r\n      ...prev,\r\n      fen: data.fen,\r\n      moves: [...prev.moves, data.lastMove],\r\n      scoreWhite: data.score_white || prev.scoreWhite,\r\n      scoreBlack: data.score_black || prev.scoreBlack,\r\n      isCheck: data.is_check || false,\r\n      isCheckmate: data.is_checkmate || false,\r\n    }));\r\n\r\n    setCapturedPieces({\r\n      white: data.captured_by_white || [],\r\n      black: data.captured_by_black || [],\r\n    });\r\n  };\r\n\r\n  // Render\r\n  if (!gameMode) {\r\n    return <GameModeSelection onSelectMode={setGameMode} />;\r\n  }\r\n\r\n  if (gameMode === \"friend\") {\r\n    return (\r\n      <div>\r\n        <h2>Multiplayer Game</h2>\r\n        <p>Game ID: {gameId}</p>\r\n        {/* Afișează tabla de șah și gestionează mutările */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"chess-game\">\r\n      <header>\r\n        <h2>Game with AI</h2>\r\n        <button onClick={resetGame}>Reset Game</button>\r\n      </header>\r\n\r\n      <div className=\"game-container\">\r\n        <div className=\"left-panel\">\r\n          <Score\r\n            scoreBlack={gameState.scoreBlack}\r\n            scoreWhite={gameState.scoreWhite}\r\n            isCheck={gameState.isCheck}\r\n            isCheckmate={gameState.isCheckmate}\r\n          />\r\n\r\n          {learningData && (\r\n            <div className=\"learning-data\">\r\n              <h3>Learning Data</h3>\r\n              <p>\r\n                <strong>Games Played:</strong> {learningData.games_played}\r\n              </p>\r\n              <h4>Piece Values:</h4>\r\n              <ul>\r\n                {Object.entries(learningData.piece_values).map(\r\n                  ([piece, value]) => (\r\n                    <li key={piece}>\r\n                      {piece}: {value.toFixed(2)}\r\n                    </li>\r\n                  )\r\n                )}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"chessboard-container\">\r\n          <Chessboard\r\n            position={gameState.fen}\r\n            onDrop={onDrop}\r\n            onMouseOverSquare={onMouseOverSquare}\r\n            onMouseOutSquare={onMouseOutSquare}\r\n            squareStyles={highlightedSquares}\r\n            draggable={true}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"right-panel\">\r\n          <div className=\"captured-pieces\">\r\n            <h3>Captured by Player:</h3>\r\n            <div className=\"pieces\">\r\n              {capturedPieces.black.map((piece, index) => (\r\n                <img\r\n                  key={index}\r\n                  src={`/assets/chess-pieces/${piece}.png`}\r\n                  alt={piece}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"captured-pieces\">\r\n            <h3>Captured by Bot:</h3>\r\n            <div className=\"pieces\">\r\n              {capturedPieces.white.map((piece, index) => (\r\n                <img\r\n                  key={index}\r\n                  src={`/assets/chess-pieces/${piece}.png`}\r\n                  alt={piece}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}